name: üê∂ Run Robowoofy Script

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  run-woofy:
    if: startsWith(github.event.comment.body, '/run')
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Parse command
        id: parse
        run: |
          comment="${{ github.event.comment.body }}"
          echo "Comment: $comment"

          # Default values
          FN="main"
          NETWORK="mainnet"
          SEND="false"

          # Parse arguments like fn=func_name network=arb send=true
          for arg in $comment; do
            case "$arg" in
              fn=*) FN="${arg#fn=}" ;;
              network=*) NETWORK="${arg#network=}" ;;
              send=*) SEND="${arg#send=}" ;;
            esac
          done

          echo "fn=$FN" >> $GITHUB_OUTPUT
          echo "network=$NETWORK" >> $GITHUB_OUTPUT
          echo "send=$SEND" >> $GITHUB_OUTPUT

      - name: üß∞ Checkout code
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: ‚ö° Install dependencies
        run: |
          pip install uv
          uv sync
          pip install eth-brownie==1.21.0 git+https://github.com/wavey0x/brownie-safe.git@deps setuptools==80.9.0
          curl -L https://foundry.paradigm.xyz | bash
          /root/.foundry/bin/foundryup
          ln -s /root/.foundry/bin/* /usr/local/bin/

      - name: üîê Set environment variables
        env:
          ROBOWOOFY_SIGNER_PK: ${{ secrets.ROBOWOOFY_SIGNER_PK }}
          SAFE_ADDRESS: ${{ secrets.SAFE_ADDRESS }}
          TG_ERROR_GROUP_CHAT_ID: ${{ secrets.TG_ERROR_GROUP_CHAT_ID }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
          BASE_RPC_URL: ${{ secrets.BASE_RPC_URL }}
          ARB_RPC_URL: ${{ secrets.ARB_RPC_URL }}
        run: |
          echo "Environment ready."

      - name: üß™ Run Robowoofy
        run: |
          echo "Running function: ${{ steps.parse.outputs.fn }}"
          echo "Network: ${{ steps.parse.outputs.network }}"
          echo "Send flag: ${{ steps.parse.outputs.send }}"

          brownie run src/woof.py ${{ steps.parse.outputs.fn }} \
            --network ${{ steps.parse.outputs.network }} \
            $([ "${{ steps.parse.outputs.send }}" = "true" ] && echo "--send" || echo "")